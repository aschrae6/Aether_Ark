openapi: 3.0.0
info:
  description: Create Solar System Models with Aether_Ark
  title: Aether_Ark API
  version: 0.0.1

paths:
  '/user':
    post:
      summary: Creates a user
      description: >-
        Creates a user when the client supplies a required username, and email
        in the request.

        Response with a user object.
#      parameters: [ ]
      operationId: Create User
      requestBody:
        "$ref": "#/components/requestBodies/CreateUser"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ApiResponse"
#        "400":
#          description: Client Error
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  "$ref": "#/components/schemas/user"
#        "500":
#          description: Server Error
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  "$ref": "#/components/schemas/user"
  '/user/{username}':
    get:
      summary: Gets user information
      description: >-
        Gets a user when the client supplies a required username in the path,
        and a email in the request.

        Response with a user object.
      parameters:
        - "$ref": "#/components/parameters/Username"
      operationId: Get User
      responses:
        default:
          description: Default response
    put:
      summary: Updates user information
      description: >-
        Updates a user when the client supplies a required username in the
        path, and a email in the request.
      parameters:
        - "$ref": "#/components/parameters/Username"
      operationId: Update User
      responses:
        default:
          description: Default response
    delete:
      summary: Deletes ALL user information
      description: >-
        Deletes a user when the client supplies a required username in the
        path, and a email in the request
      parameters:
        - "$ref": "#/components/parameters/Username"
      operationId: Delete User
      responses:
        default:
          description: Default response

  '/user/{username}/solarSystem':
    post:
      summary: Creates a solar System
      description: >-
        Creates a solar System when passed a username in the path, and a solar
        system ID and solar system name in the request

        Returns the new solar system including a unique ID in the response.
#      parameters: [ ]
      operationId: Create Solar System
      responses:
        default:
          description: Default response

  '/user/{username}/solarSystem/{solarSystemId}':
    get:
      summary: Gets a solar System
      description: >-
        Gets a solar System when passed a username and a solar system ID in the
        path, and solar system name in the request.
      parameters:
        - "$ref": "#/components/parameters/Username"
        - "$ref": "#/components/parameters/SolarSystemId"
        - "$ref": "#/components/parameters/GetAll"
      operationId: Get Solar System
      responses:
        default:
          description: Default response
    delete:
      summary: Deletes a solar System
      description: ''
      parameters:
        - "$ref": "#/components/parameters/Username"
        - "$ref": "#/components/parameters/SolarSystemId"
      operationId: Delete Solar System
      responses:
        default:
          description: Default response
    put:
      summary: Updates a solar System
      description: ''
      parameters:
        - "$ref": "#/components/parameters/Username"
        - "$ref": "#/components/parameters/SolarSystemId"
      operationId: Update Solar System
      responses:
        default:
          description: Default response

  '/user/{username}/celestialBody':
    post:
      summary: ''
      description: ''
#      parameters: []
      operationId: Create Celestial Body
      responses:
        default:
          description: Default response

  '/user/{username}/celestialBody/{celestialBodyId}':
      get:
        summary: ''
        description: ''
        parameters:
          - "$ref": "#/components/parameters/Username"
          - "$ref": "#/components/parameters/CelestialBodyId"
        operationId: Get Celestial Body
        responses:
          default:
            description: Default response
      put:
        summary: ''
        description: ''
        parameters:
          - "$ref": "#/components/parameters/Username"
          - "$ref": "#/components/parameters/CelestialBodyId"
        operationId: Update Celestial Body
        responses:
          default:
            description: Default response
      delete:
        summary: ''
        description: ''
        parameters:
          - "$ref": "#/components/parameters/Username"
          - "$ref": "#/components/parameters/CelestialBodyId"
        operationId: Delete Celestial Body
        responses:
          default:
            description: Default response

components:
  parameters:
    Username:
      name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    SolarSystemId:
      name: solarSystemId
      in: path
      description: solar system ID
      required: true
      schema:
        type: string
    CelestialBodyId:
      name: solarSystemId
      in: path
      description: solar system ID
      required: true
      schema:
        type: string
    GetAll:
      name: getAll
      in: query
      description: get all solar systems
      required: false
      schema:
        type: boolean

  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    UsernameEmailRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    UserEmailRequest:
      type: object
      properties:
        email:
          type: string
    UserResponse:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        solarSystemIds:
          type: array
        celestialBodyIds:
          type: array
    celestialBodyResponse:
      type: object
      properties:
        bodyId:
          type: string
        name:
          type: string
        diameter:
          type: integer
        mass:
          type: integer
        memberSolarSystems:
          type: array
    solarSystemResponse:
      type: object
      properties:
        systemId:
          type: string
        systemName:
          type: string
        celestialBodies:
          type: array
        distanceFromCenter:
          type: array
        username:
          type: string
  # Does not have to be used
  requestBodies:
    CreateUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsernameEmailRequest'
      description: Username and Email to create user
      required: true
    getUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserEmailRequest'
      description: Email that needs to be used to get user
      required: true
  responses:
   "200":
     description: Successful Operation
     content:
       application/json:
         schema:
           type: array
           items:
             "$ref": "#/components/schemas/ApiResponse"
   "400":
     description: Client Error
     content:
       application/json:
         schema:
           type: array
           items:
             "$ref": "#/components/schemas/ApiResponse"
   "500":
     description: Server Error
     content:
       application/json:
         schema:
           type: array
           items:
             "$ref": "#/components/schemas/ApiResponse"